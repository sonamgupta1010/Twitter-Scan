{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChDA;;;;;AEAA;AACA;AACA;AACA;AACA","sources":["webpack://reactjs-chrome/./src/component/Error.tsx","webpack://reactjs-chrome/./src/component/Facts.tsx","webpack://reactjs-chrome/./src/component/Header.tsx","webpack://reactjs-chrome/./src/component/MyLoader.tsx","webpack://reactjs-chrome/./src/popup/index.tsx","webpack://reactjs-chrome/./src/popup/popup.tsx","webpack://reactjs-chrome/webpack/bootstrap","webpack://reactjs-chrome/webpack/runtime/chunk loaded","webpack://reactjs-chrome/webpack/runtime/compat get default export","webpack://reactjs-chrome/webpack/runtime/define property getters","webpack://reactjs-chrome/webpack/runtime/global","webpack://reactjs-chrome/webpack/runtime/hasOwnProperty shorthand","webpack://reactjs-chrome/webpack/runtime/make namespace object","webpack://reactjs-chrome/webpack/runtime/node module decorator","webpack://reactjs-chrome/webpack/runtime/jsonp chunk loading","webpack://reactjs-chrome/webpack/runtime/nonce","webpack://reactjs-chrome/webpack/before-startup","webpack://reactjs-chrome/webpack/startup","webpack://reactjs-chrome/webpack/after-startup"],"sourcesContent":["// Importing necessary libraries and types from React and framer-motion\r\nimport React from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n// Defining the ErrorMessage component\r\nconst ErrorMessage = ({ message }) => {\r\n    return (\r\n    // Error container with center alignment\r\n    React.createElement(\"div\", { className: \"error-container flex items-center justify-center m-auto\" },\r\n        React.createElement(AnimatePresence, null, message && (React.createElement(motion.div\r\n        // Initial state of the animation\r\n        , { \r\n            // Initial state of the animation\r\n            initial: { opacity: 0, y: -20 }, \r\n            // State to animate to\r\n            animate: { opacity: 1, y: 0 }, \r\n            // State to animate to when component is removed\r\n            exit: { opacity: 0, y: -20 }, \r\n            // Transition timings\r\n            transition: { duration: 0.3 }, \r\n            // Styling and layout for the error message\r\n            className: \"error-message text-black p-2  flex flex-col items-center\" },\r\n            React.createElement(\"span\", { role: \"img\", \"aria-label\": \"Error\", className: \" mb-2\", style: { fontSize: '6rem' } }, \"\\u26A0\\uFE0F\"),\r\n            React.createElement(\"span\", { className: \"text-lg\" }, message))))));\r\n};\r\n// Exporting the ErrorMessage component\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\nconst Fact = ({ text }) => {\r\n    // Split the input text into paragraphs by empty lines and remove any leading/trailing whitespace\r\n    // const paragraphs = text.split('\\n').filter(item => item.trim().length > 1);\r\n    // console.log(paragraphs,\"text\")\r\n    return (React.createElement(\"div\", { className: \"max-w-md mx-auto p-4\" },\r\n        React.createElement(\"div\", { className: \"space-y-4\" },\r\n            React.createElement(\"div\", { className: \"flex items-start space-x-2\" },\r\n                React.createElement(\"div\", { className: \"bg-gray-300 rounded-full w-8 h-8 flex items-center justify-center text-gray-600\" }),\r\n                React.createElement(\"div\", { className: \"flex-1 bg-white border rounded p-4 ml-2 text-base\" }, text.trim())))));\r\n};\r\nexport default Fact;\r\n","import React from 'react';\r\nimport '../assets/tailwind.css';\r\nconst Header = ({ header }) => {\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: \"sticky top-0 z-50\", style: { backgroundColor: 'black', color: 'white', padding: '13px 5px', cursor: 'grabbing', fontWeight: 500, display: 'flex', justifyContent: 'center', alignItems: 'center' } },\r\n            React.createElement(\"div\", { style: { display: 'flex', alignItems: 'center' } },\r\n                React.createElement(\"p\", { className: \"m-0 ml-1 text-base\" }, header)))));\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n// Defining MyLoader component which uses ContentLoader to create a placeholder loading screen\r\nconst MyLoader = (props) => (\r\n// ContentLoader component creates SVG based (scalable vector graphics) loading placeholders\r\nReact.createElement(ContentLoader\r\n// Speed of the loading animation\r\n, Object.assign({ \r\n    // Speed of the loading animation\r\n    speed: 2, \r\n    // Width of the SVG container\r\n    width: 400, \r\n    // Height of the SVG container\r\n    height: 460, \r\n    // The view box of the SVG container\r\n    viewBox: \"0 0 400 460\", \r\n    // Background color of the SVG\r\n    backgroundColor: \"#f3f3f3\", \r\n    // Foreground color (the loading animation color)\r\n    foregroundColor: \"#ecebeb\" }, props),\r\n    \"// Circle element in the SVG\",\r\n    React.createElement(\"circle\", { cx: \"31\", cy: \"31\", r: \"15\" })\r\n// Rectangular elements in the SVG\r\n,\r\n    \"// Rectangular elements in the SVG\",\r\n    React.createElement(\"rect\", { x: \"58\", y: \"18\", rx: \"2\", ry: \"2\", width: \"140\", height: \"10\" }),\r\n    React.createElement(\"rect\", { x: \"58\", y: \"34\", rx: \"2\", ry: \"2\", width: \"140\", height: \"10\" }),\r\n    React.createElement(\"rect\", { x: \"0\", y: \"60\", rx: \"2\", ry: \"2\", width: \"400\", height: \"400\" })));\r\n// Exporting the MyLoader component\r\nexport default MyLoader;\r\n","// Import the necessary modules and styles\r\nimport React from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport '../assets/tailwind.css'; // Import your Tailwind CSS file\r\nimport Popup from \"./popup\"; // Import your Popup component\r\n// Function to initialize the app\r\nfunction init() {\r\n    // Create a new div element to serve as the app container\r\n    const appContainer = document.createElement('div');\r\n    document.body.appendChild(appContainer);\r\n    // Check if the app container was successfully created\r\n    if (!appContainer) {\r\n        throw new Error(\"Can not find AppContainer\");\r\n    }\r\n    // Create a root for rendering the app inside the app container\r\n    const root = createRoot(appContainer);\r\n    // Log the app container for debugging\r\n    console.log(appContainer);\r\n    // Render the Popup component within the app container\r\n    root.render(React.createElement(Popup, null));\r\n}\r\n// Initialize the app\r\ninit();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ErrorMessage from '../component/Error';\r\nimport MyLoader from \"../component/MyLoader\";\r\nimport Header from \"../component/Header\";\r\nimport Fact from \"../component/Facts\";\r\nimport { throttle } from 'lodash';\r\nconst Popup = () => {\r\n    const [twitterData, setTwitterData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [scrollDirection, setScrollDirection] = useState(null);\r\n    useEffect(() => {\r\n        // Get active tab information\r\n        chrome.tabs.query({ active: true, currentWindow: true }, ([activeTab]) => {\r\n            if (activeTab) {\r\n                const tabUrl = activeTab.url || \"\";\r\n                if (tabUrl.includes(\"twitter.com\")) {\r\n                    // Proceed only if the active tab URL contains \"twitter.com\"\r\n                    // Fetch Twitter data\r\n                    chrome.tabs.sendMessage(activeTab.id, { message: \"getTwitterData\" }, (response) => {\r\n                        if (response) {\r\n                            setLoading(false);\r\n                            setTwitterData([response.username] || []);\r\n                        }\r\n                        else {\r\n                            setError(true);\r\n                        }\r\n                    });\r\n                    // Set up a listener for background messages\r\n                    function messageListener(message) {\r\n                        if (message.message === \"scrollTwitterUsername\") {\r\n                            setTwitterData(prevData => {\r\n                                // Check if the username is not already in the state\r\n                                if (!prevData.includes(message.username)) {\r\n                                    return [...prevData, message.username];\r\n                                }\r\n                                return prevData;\r\n                            });\r\n                            // Set the scroll direction in the state\r\n                            setScrollDirection(message.direction);\r\n                        }\r\n                    }\r\n                    // Add the listener\r\n                    chrome.runtime.onMessage.addListener(messageListener);\r\n                    // Set up throttling for scroll events\r\n                    const throttledScrollHandler = throttle(() => {\r\n                        // Your existing code to fetch Twitter data and update state goes here\r\n                    }, 100); // Adjust the throttle interval as needed (e.g., 300 milliseconds)\r\n                    // Add scroll event listener with throttling\r\n                    window.addEventListener('scroll', throttledScrollHandler);\r\n                    // Clean up the listener and throttled function on component unmount\r\n                    return () => {\r\n                        chrome.runtime.onMessage.removeListener(messageListener);\r\n                        window.removeEventListener('scroll', throttledScrollHandler);\r\n                        throttledScrollHandler.cancel(); // Ensure the throttled function is canceled on unmount\r\n                        setScrollDirection(null); // Clear the scroll direction on unmount\r\n                    };\r\n                }\r\n                else {\r\n                    console.log(error, \"error12\");\r\n                    setError(true);\r\n                    return;\r\n                }\r\n            }\r\n            else {\r\n                setError(true);\r\n                return;\r\n            }\r\n        });\r\n    }, []);\r\n    return (React.createElement(\"div\", { className: \"popup-container\" },\r\n        React.createElement(Header, { header: \"Twitter Reader\" }),\r\n        error ? (React.createElement(ErrorMessage, { message: \"Please Go to Twitter Acc or Refresh.\" })) : (React.createElement(\"div\", { className: \"content-container\" },\r\n            React.createElement(\"div\", { className: \"overflow-y-auto h-full text-container\" },\r\n                React.createElement(\"div\", { className: \"px-4\" },\r\n                    React.createElement(\"div\", { className: \"prose prose-sm prose-primary mb-4 max-w-none overflow-auto break-words dark:prose-invert\", id: \"main\", dir: \"auto\" }, loading ? (React.createElement(\"div\", { className: \"loader-container\" },\r\n                        React.createElement(MyLoader, null))) : (React.createElement(\"div\", null,\r\n                        twitterData.map((username, index) => (React.createElement(Fact, { key: index, text: `Name: ${username}` }))),\r\n                        scrollDirection && (React.createElement(\"div\", { className: \"scroll-direction\" },\r\n                            \"Scroll Direction: \",\r\n                            scrollDirection)))))))))));\r\n};\r\nexport default Popup;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"popup\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreactjs_chrome\"] = self[\"webpackChunkreactjs_chrome\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sour-b53f7e\",\"vendors-node_modules_lodash_lodash_js-node_modules_react-content-loader_dist_react-content-lo-d1ce5e\",\"src_assets_tailwind_css\"], () => (__webpack_require__(\"./src/popup/index.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}